cmdhistory=["(first (parse-fasta \\"sc.gff3\\"))" "(parse-fasta \\"sc.gff3\\")" "(parse-fasta \\"gm.gff3\\"\\n             )" "(parse-fasta \\"gm.gff3\\")" "(parse-fasta \\"sc.gff3\\")" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(count (second (split-fasta rdr)))" "(count (first (split-fasta rdr))\\n       )" "(first (split-fasta rdr))" "(split-fasta rdr)" "(second (split-fasta rdr))" "(count (second (split-fasta rdr)))" "(count (first (split-fasta rdr)))" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(split-fasta rdr)" "(count (second (split-fasta rdr)))" "(count (first (split-fasta rdr)))" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(def one (first (split-fasta rdr)))" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(def output (split-fasta rdr))" "(first (first output))" "(second (first output))" "(first (second output))" "(first (drop 1 (second output)))" "(parse-fasta \\"sc.gff3\\")" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(def output (split-fasta rdr))" "(first (first output))" "(first (second (output))\\n       )" "(first (second output))" "(first (parse-fasta \\"sc.gff3\\"))" "(parse-fasta \\"sc.gff3\\")" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(first (parse-fasta rdr))" "(\:header (first (parse-fasta rdr)))" "(keys (first (parse-fasta rdr)))" "(parse-fasta rdr)" "(def rdr (clojure.java.io/reader \\"sc.gff3\\"))" "(def output (parse-fasta rdr))" "(first output)" "(keys (first output))" "(\:header (first output))" "(\:header (second output))" "(def psi (parse \\"G\://data/psi-mi.obo.txt\\")) (\:def (first (filter \#(\= (\:id %) \\"MI\:1290\\") psi)))" "(parse-def (\:def (first (filter \#(\= (\:id %) \\"MI\:1290\\") psi))))"]
eclipse.preferences.version=1
